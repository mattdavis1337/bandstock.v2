<script>


	let sprites = {}
	let blues;
	let scaling = .0502;
	let Application = PIXI.Application,
				loader = PIXI.loader,
				resources = PIXI.loader.resources,
				Sprite = PIXI.Sprite,
				TextureCache = PIXI.utils.TextureCache,
				Rectangle = PIXI.Rectangle,
				Resources = PIXI.loader.resources;

	function init(){

		app = new Application({
				width: 544,
				height: 704,
				antialias: true,
				transparent: false,
				resolution: 1
			}
		);


		document.getElementById('game-board').appendChild(app.view);
		var canvas = app.view;
		canvas.style = "border:7px;border-style:outset;border-color:#787;margin:2px;padding:2px;";

		var canvasWidth;
    var ctx;

		app.stop();

//load an image and run the `setup` function when it's done
		PIXI.loader
			.add("/images/bandstockTileSheet2.png")
			.add("spritesheet", "/images/bandstockTileSheet2.json")
			.load(setup);
	}


	function resizeCanvas(canvas) {

		canvas.width = window.innerWidth;
		canvas.height = window.innerHeight;
	}


	// // start animating
	// animate();
	//
	// function animate() {
	//   requestAnimationFrame(animate);
	//   // render the root container
	//   renderer.render(stage);
	// };

	function animateHover() {


	}

	//This `setup` function will run when the image has loaded
	function setup() {
		let speed = 3;

		var height = 32;
		var width = 32;

		var totalWidth = 545;
		var totalHeight = 420;

		var sprites = new Array(height);
		for (var i = 0; i <= width; i++) {
			sprites[i] = new Array(width);
		}

		var colors = new Array(width);
		colors[0] = "red";
		colors[1] = "red";
		colors[2] = "red";
		colors[3] = "red";
		colors[4] = "red";
		colors[5] = "red";
		colors[6] = "red";
		colors[7] = "red";
		colors[8] = "red";
		colors[9] = "red";
		colors[10] = "red";
		colors[11] = "red";
		colors[12] = "red";
		colors[13] = "red";
		colors[14] = "red";
		colors[15] = "red";
		colors[16] = "red";
		colors[17] = "red";
		colors[18] = "red";
		colors[19] = "red";
		colors[20] = "red";
		colors[21] = "red";
		colors[22] = "red";
		colors[23] = "red";
		colors[24] = "red";
		colors[25] = "red";
		colors[26] = "red";
		colors[27] = "red";
		colors[28] = "red";
		colors[29] = "red";
		colors[30] = "red";
		colors[31] = "red";
		colors[32] = "red";


		for(var i = 0; i < colors.length; i++){
			for(var j = 0; j < height; j++){
				cur_sprite = sprites[i][j] = load_tile(colors[i], 5);
				var tileSpeed = speed*(((j*i)+2)/75);

				init_sprite_animation(cur_sprite, tileSpeed);

				var width = 30; //cur_sprite.width
				var height = 40; //cur_sprite.height

				cur_sprite.x = (i*width+width/2)+i*2;
				cur_sprite.y = height/2 + j*height + j*2;

				cur_sprite.play();
			}
		}

		for(var i = 0; i < colors.length; i++){
			for(var j = 0; j< height; j++){

				//app.stage.addChild(sprites[i][j]);
				app.stage.addChild(doHover(sprites[i][j].x, sprites[i][j].y, 30, 40));

			}
		}



		app.start();
	}

	function doHover(x, y, width, height){

		var shape = new PIXI.Graphics();
		//shape.lineStyle(5, 0xFFFFFF, 1);
		shape.beginFill(0x0000FF, 1);
		shape.drawRect(x, y, width, height);
		shape.endFill();


		//shape = new PIXI.Rectangle(x, y, width, height);
		shape.alpha = 0.5;
		// designate circle as being interactive so it handles events
		shape.interactive = true;

		// create hit area, needed for interactivity
		//shape.hitArea = new PIXI.Rectangle(x, y, width, height);

		// make circle non-transparent when mouse is over it
		shape.mouseover = function(mouseData) {
  		this.alpha = 1;
		}

		// make circle half-transparent when mouse leaves
		shape.mouseout = function(mouseData) {
		  this.alpha = 0.5;
		}

		return shape;


		// spriteIn.interactive = true;
		//
		// // create hit area, needed for interactivity
		// spriteIn.hitArea = new PIXI.Rectangle(spriteIn.x, spriteIn.y, spriteIn.width, spriteIn.height);
		//
		// // make circle non-transparent when mouse is over it
		// spriteIn.mouseover = function(mouseData) {
		// 	console.log("mousein");
		// 	console.log(mouseData);
		// 	console.log(this.x + "," + this.y);
		// 	this.alpha = .2;
		// }
		//
		// // make circle half-transparent when mouse leaves
		// spriteIn.mouseout = function(mouseData) {
		// 	console.log("mouseout");
		// 	this.alpha = 0.7;
		// }
		//
		// return spriteIn;
	}

	function load_tile(color, frame_count){
		textures = [];

		for (i = 0; i < frame_count; i++){
			var framekey = color + ' ' + i + '.png';
			var texture = PIXI.Texture.fromFrame(framekey);
			var time = resources.spritesheet.data.frames[framekey].duration;
			textures.push({texture, time});
		}

		return new PIXI.extras.AnimatedSprite(textures);
	}

	function init_sprite_animation(sprite, speedIn){
		sprite.animationSpeed = speedIn;
		sprite.anchor.set(0.5);
		//sprite.scale.set(scaling);
		return sprite;
	}

</script>

<div id="game-board" width="100%" class="jumbotron black col-lg-12" style="padding-top:0px">
		<img style="padding-bottom:75px" width="100%" src="<%= static_path(@conn, "/images/logo2.png") %>">

</div>
